apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: client-eng-application
    app.kubernetes.io/instance: client-eng-application-instance
    app.kubernetes.io/name: client-eng-application
    app.openshift.io/runtime: js
  name: client-eng-application
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/instance: client-eng-application-instance
      app.kubernetes.io/name: client-eng-application
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: client-eng-application-instance
        app.kubernetes.io/name: client-eng-application
    spec:
      containers:
        - env:
            - name: INGRESS_HOST
            - name: PROTOCOLS
            - name: LOG_LEVEL
              value: debug
          image: quay.io/celestelopezgarrido/client-eng-application
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 3000
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: client-eng-application
          ports:
            - containerPort: 3000
              name: http
              protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: http
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
---


apiVersion: route.openshift.io/v1
kind: Route
metadata:
  annotations:
    argocd.argoproj.io/sync-options: Validate=false
    openshift.io/host.generated: "true"
  name: client-eng-application
spec:
  tls:
    termination: edge
  to:
    kind: Service
    name: client-eng-application
    weight: 100
  wildcardPolicy: None


---

apiVersion: v1
kind: Service
metadata:
  labels:
    app: client-eng-application
    app.kubernetes.io/instance: client-eng-application-instance
    app.kubernetes.io/name: client-eng-application
  name: client-eng-application
spec:
  ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: 3000
  selector:
    app.kubernetes.io/instance: client-eng-application-instance
    app.kubernetes.io/name: client-eng-application
  sessionAffinity: None
  type: ClusterIP
